import 'dart:convert';
import 'package:http/http.dart' as http;

/// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
/// –í–ù–ò–ú–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!
class NotificationTester {
  // Server Key –∏–∑ Firebase Console
  static const String _serverKey = 'YOUR_SERVER_KEY_HERE';
  static const String _fcmUrl = 'https://fcm.googleapis.com/fcm/send';

  /// –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  /// [token] - FCM —Ç–æ–∫–µ–Ω —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  /// [title] - –∑–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  /// [body] - —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  /// [data] - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  static Future<bool> sendTestNotification({
    required String token,
    required String title,
    required String body,
    Map<String, dynamic>? data,
  }) async {
    try {
      final payload = {
        'to': token,
        'notification': {
          'title': title,
          'body': body,
          'sound': 'default',
        },
        'data': data ?? {},
        'priority': 'high',
      };

      final response = await http.post(
        Uri.parse(_fcmUrl),
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'key=$_serverKey',
        },
        body: json.encode(payload),
      );

      if (response.statusCode == 200) {
        print('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
        return true;
      } else {
        print('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: ${response.statusCode} - ${response.body}');
        return false;
      }
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞: $e');
      return false;
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
  static Future<bool> sendOrderStatusNotification({
    required String token,
    required String orderId,
    required String status,
    String? businessId,
  }) async {
    final statusMessages = {
      'confirmed': '–í–∞—à –∑–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
      'preparing': '–í–∞—à –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤–∏—Ç—Å—è',
      'ready': '–í–∞—à –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ',
      'delivering': '–ö—É—Ä—å–µ—Ä –≤ –ø—É—Ç–∏',
      'delivered': '–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω',
    };

    return await sendTestNotification(
      token: token,
      title: '–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #$orderId',
      body: statusMessages[status] ?? '–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –∏–∑–º–µ–Ω–µ–Ω',
      data: {
        'type': 'order_status_change',
        'order_id': orderId,
        'status': status,
        if (businessId != null) 'business_id': businessId,
      },
    );
  }

  /// –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∞–∫—Ü–∏–∏
  static Future<bool> sendPromotionNotification({
    required String token,
    required String promotionTitle,
    required String businessId,
  }) async {
    return await sendTestNotification(
      token: token,
      title: '–ù–æ–≤–∞—è –∞–∫—Ü–∏—è! üéâ',
      body: promotionTitle,
      data: {
        'type': 'promotion',
        'business_id': businessId,
      },
    );
  }

  /// –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
  static Future<bool> sendDeliveryNotification({
    required String token,
    required String orderId,
    required String message,
    String? estimatedTime,
  }) async {
    return await sendTestNotification(
      token: token,
      title: '–î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ #$orderId',
      body: message,
      data: {
        'type': 'delivery_update',
        'order_id': orderId,
        if (estimatedTime != null) 'estimated_time': estimatedTime,
      },
    );
  }
}

/// –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
/// 
/// // –ü–æ–ª—É—á–∏—Ç—å FCM —Ç–æ–∫–µ–Ω
/// final token = NotificationService.instance.fcmToken;
/// 
/// // –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–∫–∞–∑–∞
/// await NotificationTester.sendOrderStatusNotification(
///   token: token!,
///   orderId: '12345',
///   status: 'ready',
///   businessId: '1',
/// );
/// 
/// // –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∞–∫—Ü–∏–∏
/// await NotificationTester.sendPromotionNotification(
///   token: token!,
///   promotionTitle: '–°–∫–∏–¥–∫–∞ 20% –Ω–∞ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã!',
///   businessId: '1',
/// );
/// 
/// // –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
/// await NotificationTester.sendDeliveryNotification(
///   token: token!,
///   orderId: '12345',
///   message: '–ö—É—Ä—å–µ—Ä –ø—Ä–∏–±—É–¥–µ—Ç —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç',
///   estimatedTime: '10 –º–∏–Ω',
/// );
