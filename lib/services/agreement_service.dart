import 'package:shared_preferences/shared_preferences.dart';

/// –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ —Å–æ–≥–ª–∞—Å–∏—è–º–∏
class AgreementService {
  static const String _offerAcceptedKey = 'offer_accepted';
  static const String _privacyAcceptedKey = 'privacy_accepted';
  static const String _termsAcceptedKey = 'terms_accepted';

  /// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø—Ä–∏–Ω—è—Ç–∞ –ª–∏ –æ—Ñ–µ—Ä—Ç–∞
  static Future<bool> isOfferAccepted() async {
    final prefs = await SharedPreferences.getInstance();
    return prefs.getBool(_offerAcceptedKey) ?? false;
  }

  /// –û—Ç–º–µ—Ç–∏—Ç—å –æ—Ñ–µ—Ä—Ç—É –∫–∞–∫ –ø—Ä–∏–Ω—è—Ç—É—é
  static Future<void> acceptOffer() async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.setBool(_offerAcceptedKey, true);
    print('‚úÖ –û—Ñ–µ—Ä—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
  }

  /// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø—Ä–∏–Ω—è—Ç–∞ –ª–∏ –ø–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
  static Future<bool> isPrivacyAccepted() async {
    final prefs = await SharedPreferences.getInstance();
    return prefs.getBool(_privacyAcceptedKey) ?? false;
  }

  /// –û—Ç–º–µ—Ç–∏—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∫–∞–∫ –ø—Ä–∏–Ω—è—Ç—É—é
  static Future<void> acceptPrivacy() async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.setBool(_privacyAcceptedKey, true);
    print('‚úÖ –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∏–Ω—è—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
  }

  /// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø—Ä–∏–Ω—è—Ç—ã –ª–∏ —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
  static Future<bool> isTermsAccepted() async {
    final prefs = await SharedPreferences.getInstance();
    return prefs.getBool(_termsAcceptedKey) ?? false;
  }

  /// –û—Ç–º–µ—Ç–∏—Ç—å —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–∞–∫ –ø—Ä–∏–Ω—è—Ç—ã–µ
  static Future<void> acceptTerms() async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.setBool(_termsAcceptedKey, true);
    print('‚úÖ –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏–Ω—è—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
  }

  /// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø—Ä–∏–Ω—è—Ç—ã –ª–∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è
  static Future<bool> areAllAgreementsAccepted() async {
    final offerAccepted = await isOfferAccepted();
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    // final privacyAccepted = await isPrivacyAccepted();
    // final termsAccepted = await isTermsAccepted();

    return offerAccepted;
  }

  /// –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ —Å–æ–≥–ª–∞—Å–∏—è (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
  static Future<void> resetAllAgreements() async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.remove(_offerAcceptedKey);
    await prefs.remove(_privacyAcceptedKey);
    await prefs.remove(_termsAcceptedKey);
    print('üîÑ –í—Å–µ —Å–æ–≥–ª–∞—Å–∏—è —Å–±—Ä–æ—à–µ–Ω—ã');
  }

  /// –ü—Ä–∏–Ω—è—Ç—å –≤—Å–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è —Ä–∞–∑–æ–º
  static Future<void> acceptAllAgreements() async {
    await acceptOffer();
    await acceptPrivacy();
    await acceptTerms();
    print('‚úÖ –í—Å–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –ø—Ä–∏–Ω—è—Ç—ã');
  }
}
